<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.portfolio.weather.scheduler.mapper.EnvironmentalIndexMapper">
    <insert id="mergeIndex" parameterType="map" databaseId="h2">
        MERGE INTO environmental_index KEY (code, area_no, fcst_date)
        VALUES (
            #{code},
            #{areaNo},
            #{fcst_date},
            #{fcst_value},
            CURRENT_TIMESTAMP
        )
    </insert>

    <insert id="mergeIndex" parameterType="map" databaseId="postgresql">
        INSERT INTO environmental_index (
            code, area_no, fcst_date,
            fcst_value, created_at
        ) VALUES (
            #{code},
            #{areaNo},
            #{date},
            #{fcst_value},
            CURRENT_TIMESTAMP
        )
        ON CONFLICT (code, area_no, fcst_date)
        DO UPDATE SET
            fcst_value = #{fcst_value},
            created_at = CURRENT_TIMESTAMP
    </insert>

    <insert id="mergeIndex" parameterType="map" databaseId="mssql">
        MERGE environmental_index AS target
        USING (SELECT 
            #{code} AS code,
            #{areaNo} AS area_no,
            #{fcst_date} AS fcst_date,
            #{fcst_value} AS fcst_value
        ) AS source
        ON (
            target.code = source.code 
            AND target.area_no = source.area_no 
            AND target.fcst_date = source.fcst_date
        )
        WHEN MATCHED THEN
            UPDATE SET 
                fcst_value = source.fcst_value,
                created_at = dbo.convertToSeoulTime(GETDATE())
        WHEN NOT MATCHED THEN
            INSERT (code, area_no, fcst_date, fcst_value, created_at)
            VALUES (
                source.code,
                source.area_no,
                source.fcst_date,
                source.fcst_value,
                dbo.convertToSeoulTime(GETDATE())
            );
    </insert>
</mapper>
