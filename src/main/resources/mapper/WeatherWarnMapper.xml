<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.portfolio.weather.scheduler.mapper.WeatherWarnMapper">
    <insert id="mergeWeatherWarn" parameterType="map">
        <if test="_databaseId == 'h2'">
            MERGE INTO weather_warn AS target
            USING (VALUES (
                #{reg_id},
                #{tm_fc},
                #{tm_ef},
                #{tm_in},
                #{stn},
                #{wrn},
                #{lvl},
                #{cmd},
                #{grd},
                #{cnt},
                CURRENT_TIMESTAMP
            )) AS source (
                reg_id, tm_fc, tm_ef, tm_in, stn, wrn, lvl, cmd, grd, cnt, created_at
            )
            ON target.reg_id = source.reg_id 
                AND target.tm_fc = source.tm_fc 
                AND target.tm_ef = source.tm_ef
                AND target.tm_in = source.tm_in
            WHEN MATCHED THEN
                UPDATE SET 
                    wrn = source.wrn,
                    lvl = source.lvl,
                    cmd = source.cmd,
                    grd = source.grd,
                    cnt = source.cnt,
                    created_at = source.created_at
            WHEN NOT MATCHED THEN
                INSERT (reg_id, tm_fc, tm_ef, tm_in, stn, wrn, lvl, cmd, grd, cnt, created_at)
                VALUES (source.reg_id, source.tm_fc, source.tm_ef, source.tm_in, source.stn,
                       source.wrn, source.lvl, source.cmd, source.grd, source.cnt, source.created_at)
        </if>

        <if test="_databaseId == 'postgresql'">
            INSERT INTO weather_warn (
                reg_id, tm_fc, tm_ef, tm_in, stn, wrn, lvl, cmd, grd, cnt, created_at
            ) VALUES (
                #{reg_id}, #{tm_fc}, #{tm_ef}, #{tm_in}, #{stn},
                #{wrn}, #{lvl}, #{cmd}, #{grd}, #{cnt}, CURRENT_TIMESTAMP
            ) ON CONFLICT (reg_id, tm_fc, tm_ef, tm_in) 
            DO UPDATE SET
                wrn = EXCLUDED.wrn,
                lvl = EXCLUDED.lvl,
                cmd = EXCLUDED.cmd,
                grd = EXCLUDED.grd,
                cnt = EXCLUDED.cnt,
                created_at = CURRENT_TIMESTAMP
        </if>

        <if test="_databaseId == 'mssql'">
            MERGE weather_warn AS target
            USING (SELECT 
                #{reg_id} AS reg_id,
                #{tm_fc} AS tm_fc,
                #{tm_ef} AS tm_ef,
                #{tm_in} AS tm_in,
                #{stn} AS stn,
                #{wrn} AS wrn,
                #{lvl} AS lvl,
                #{cmd} AS cmd,
                #{grd} AS grd,
                #{cnt} AS cnt
            ) AS source
            ON (
                target.reg_id = source.reg_id 
                AND target.tm_fc = source.tm_fc 
                AND target.tm_ef = source.tm_ef
                AND target.tm_in = source.tm_in
            )
            WHEN MATCHED THEN
                UPDATE SET 
                    wrn = source.wrn,
                    lvl = source.lvl,
                    cmd = source.cmd,
                    grd = source.grd,
                    cnt = source.cnt,
                    created_at = CURRENT_TIMESTAMP
            WHEN NOT MATCHED THEN
                INSERT (reg_id, tm_fc, tm_ef, tm_in, stn, wrn, lvl, cmd, grd, cnt, created_at)
                VALUES (
                    source.reg_id, source.tm_fc, source.tm_ef, source.tm_in, 
                    source.stn, source.wrn, source.lvl, source.cmd, 
                    source.grd, source.cnt, CURRENT_TIMESTAMP
                );
        </if>
    </insert>
</mapper>
